// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.ecs;

import com.pulumi.awsx.Utilities;
import com.pulumi.awsx.ecs.EC2TaskDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.resources.ComponentResource;
import com.pulumi.resources.ComponentResourceOptions;
import com.pulumi.resources.CustomResourceOptions;
import javax.annotation.Nullable;

/**
 * Create a TaskDefinition resource with the given unique name, arguments, and options.
 * Creates required log-group and task &amp; execution roles.
 * Presents required Service load balancers if target group included in port mappings.
 * 
 */
@ResourceType(type="awsx:ecs:EC2TaskDefinition")
public class EC2TaskDefinition extends ComponentResource {
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EC2TaskDefinition(String name) {
        this(name, EC2TaskDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EC2TaskDefinition(String name, @Nullable EC2TaskDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EC2TaskDefinition(String name, @Nullable EC2TaskDefinitionArgs args, @Nullable ComponentResourceOptions options) {
        super("awsx:ecs:EC2TaskDefinition", name, args == null ? EC2TaskDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static ComponentResourceOptions makeResourceOptions(@Nullable ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
