// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.xyz;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.xyz.inputs.Foo;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticPageArgs extends io.pulumi.resources.ResourceArgs {

    public static final StaticPageArgs Empty = new StaticPageArgs();

    @InputImport(name="foo")
    private final @Nullable Foo foo;

    public Optional<Foo> getFoo() {
        return this.foo == null ? Optional.empty() : Optional.ofNullable(this.foo);
    }

    @InputImport(name="indexContent", required=true)
    private final Input<String> indexContent;

    public Input<String> getIndexContent() {
        return this.indexContent;
    }

    public StaticPageArgs(
        @Nullable Foo foo,
        Input<String> indexContent) {
        this.foo = foo;
        this.indexContent = Objects.requireNonNull(indexContent, "expected parameter 'indexContent' to be non-null");
    }

    private StaticPageArgs() {
        this.foo = null;
        this.indexContent = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StaticPageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Foo foo;
        private Input<String> indexContent;

        public Builder() {
    	      // Empty
        }

        public Builder(StaticPageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.foo = defaults.foo;
    	      this.indexContent = defaults.indexContent;
        }

        public Builder setFoo(@Nullable Foo foo) {
            this.foo = foo;
            return this;
        }

        public Builder setIndexContent(Input<String> indexContent) {
            this.indexContent = Objects.requireNonNull(indexContent);
            return this;
        }

        public Builder setIndexContent(String indexContent) {
            this.indexContent = Input.of(Objects.requireNonNull(indexContent));
            return this;
        }

        public StaticPageArgs build() {
            return new StaticPageArgs(foo, indexContent);
        }
    }
}
