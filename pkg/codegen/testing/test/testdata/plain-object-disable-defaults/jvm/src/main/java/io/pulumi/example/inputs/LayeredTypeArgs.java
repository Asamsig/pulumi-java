// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.example.Utilities;
import io.pulumi.example.inputs.HelmReleaseSettings;
import io.pulumi.example.inputs.HelmReleaseSettingsArgs;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LayeredTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final LayeredTypeArgs Empty = new LayeredTypeArgs();

    @InputImport(name="answer")
    private final @Nullable Input<Double> answer;

    public Input<Double> getAnswer() {
        return this.answer == null ? Input.empty() : this.answer;
    }

    @InputImport(name="other", required=true)
    private final Input<HelmReleaseSettingsArgs> other;

    public Input<HelmReleaseSettingsArgs> getOther() {
        return this.other;
    }

    @InputImport(name="plainOther")
    private final @Nullable HelmReleaseSettings plainOther;

    public Optional<HelmReleaseSettings> getPlainOther() {
        return this.plainOther == null ? Optional.empty() : Optional.ofNullable(this.plainOther);
    }

    @InputImport(name="question")
    private final @Nullable Input<String> question;

    public Input<String> getQuestion() {
        return this.question == null ? Input.empty() : this.question;
    }

    @InputImport(name="recursive")
    private final @Nullable Input<LayeredTypeArgs> recursive;

    public Input<LayeredTypeArgs> getRecursive() {
        return this.recursive == null ? Input.empty() : this.recursive;
    }

    @InputImport(name="thinker", required=true)
    private final Input<String> thinker;

    public Input<String> getThinker() {
        return this.thinker;
    }

    public LayeredTypeArgs(
        @Nullable Input<Double> answer,
        Input<HelmReleaseSettingsArgs> other,
        @Nullable HelmReleaseSettings plainOther,
        @Nullable Input<String> question,
        @Nullable Input<LayeredTypeArgs> recursive,
        Input<String> thinker) {
        this.answer = answer == null ? Input.ofNullable(4.2e+01) : answer;
        this.other = Objects.requireNonNull(other, "expected parameter 'other' to be non-null");
        this.plainOther = plainOther;
        this.question = question == null ? Input.ofNullable(Utilities.getEnv("PULUMI_THE_QUESTION").orElse(null) == null ? "<unknown>" : Utilities.getEnv("PULUMI_THE_QUESTION").orElse(null)) : question;
        this.recursive = recursive;
        this.thinker = thinker == null ? Input.ofNullable("not a good interaction") : Objects.requireNonNull(thinker, "expected parameter 'thinker' to be non-null");
    }

    private LayeredTypeArgs() {
        this.answer = Input.empty();
        this.other = Input.empty();
        this.plainOther = null;
        this.question = Input.empty();
        this.recursive = Input.empty();
        this.thinker = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LayeredTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> answer;
        private Input<HelmReleaseSettingsArgs> other;
        private @Nullable HelmReleaseSettings plainOther;
        private @Nullable Input<String> question;
        private @Nullable Input<LayeredTypeArgs> recursive;
        private Input<String> thinker;

        public Builder() {
    	      // Empty
        }

        public Builder(LayeredTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.answer = defaults.answer;
    	      this.other = defaults.other;
    	      this.plainOther = defaults.plainOther;
    	      this.question = defaults.question;
    	      this.recursive = defaults.recursive;
    	      this.thinker = defaults.thinker;
        }

        public Builder setAnswer(@Nullable Input<Double> answer) {
            this.answer = answer;
            return this;
        }

        public Builder setAnswer(@Nullable Double answer) {
            this.answer = Input.ofNullable(answer);
            return this;
        }

        public Builder setOther(Input<HelmReleaseSettingsArgs> other) {
            this.other = Objects.requireNonNull(other);
            return this;
        }

        public Builder setOther(HelmReleaseSettingsArgs other) {
            this.other = Input.of(Objects.requireNonNull(other));
            return this;
        }

        public Builder setPlainOther(@Nullable HelmReleaseSettings plainOther) {
            this.plainOther = plainOther;
            return this;
        }

        public Builder setQuestion(@Nullable Input<String> question) {
            this.question = question;
            return this;
        }

        public Builder setQuestion(@Nullable String question) {
            this.question = Input.ofNullable(question);
            return this;
        }

        public Builder setRecursive(@Nullable Input<LayeredTypeArgs> recursive) {
            this.recursive = recursive;
            return this;
        }

        public Builder setRecursive(@Nullable LayeredTypeArgs recursive) {
            this.recursive = Input.ofNullable(recursive);
            return this;
        }

        public Builder setThinker(Input<String> thinker) {
            this.thinker = Objects.requireNonNull(thinker);
            return this;
        }

        public Builder setThinker(String thinker) {
            this.thinker = Input.of(Objects.requireNonNull(thinker));
            return this;
        }

        public LayeredTypeArgs build() {
            return new LayeredTypeArgs(answer, other, plainOther, question, recursive, thinker);
        }
    }
}
