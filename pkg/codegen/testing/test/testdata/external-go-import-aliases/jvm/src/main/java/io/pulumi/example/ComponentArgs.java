// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example;

import io.pulumi.aws.ec2.Instance;
import io.pulumi.aws.ec2.inputs.InstanceLaunchTemplateArgs;
import io.pulumi.aws.s3.Bucket;
import io.pulumi.aws.s3.inputs.BucketWebsiteArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dns_v1.Policy;
import io.pulumi.googlenative.dns_v1.inputs.DnsKeySpecArgs;
import io.pulumi.googlenative.iam_v1.Key;
import io.pulumi.googlenative.iam_v1.inputs.AuditConfigArgs;
import java.util.Objects;


public final class ComponentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ComponentArgs Empty = new ComponentArgs();

    @InputImport(name="resourceLocalAlias", required=true)
    private final Input<Instance> resourceLocalAlias;

    public Input<Instance> getResourceLocalAlias() {
        return this.resourceLocalAlias;
    }

    @InputImport(name="resourceLocalInsteadOfRemoteAlias", required=true)
    private final Input<Key> resourceLocalInsteadOfRemoteAlias;

    public Input<Key> getResourceLocalInsteadOfRemoteAlias() {
        return this.resourceLocalInsteadOfRemoteAlias;
    }

    @InputImport(name="resourceNoAlias", required=true)
    private final Input<Bucket> resourceNoAlias;

    public Input<Bucket> getResourceNoAlias() {
        return this.resourceNoAlias;
    }

    @InputImport(name="resourceRemoteAlias", required=true)
    private final Input<Policy> resourceRemoteAlias;

    public Input<Policy> getResourceRemoteAlias() {
        return this.resourceRemoteAlias;
    }

    @InputImport(name="typeLocalAlias", required=true)
    private final Input<InstanceLaunchTemplateArgs> typeLocalAlias;

    public Input<InstanceLaunchTemplateArgs> getTypeLocalAlias() {
        return this.typeLocalAlias;
    }

    @InputImport(name="typeLocalInsteadOfRemoteAlias", required=true)
    private final Input<AuditConfigArgs> typeLocalInsteadOfRemoteAlias;

    public Input<AuditConfigArgs> getTypeLocalInsteadOfRemoteAlias() {
        return this.typeLocalInsteadOfRemoteAlias;
    }

    @InputImport(name="typeNoAlias", required=true)
    private final Input<BucketWebsiteArgs> typeNoAlias;

    public Input<BucketWebsiteArgs> getTypeNoAlias() {
        return this.typeNoAlias;
    }

    @InputImport(name="typeRemoteAlias", required=true)
    private final Input<DnsKeySpecArgs> typeRemoteAlias;

    public Input<DnsKeySpecArgs> getTypeRemoteAlias() {
        return this.typeRemoteAlias;
    }

    public ComponentArgs(
        Input<Instance> resourceLocalAlias,
        Input<Key> resourceLocalInsteadOfRemoteAlias,
        Input<Bucket> resourceNoAlias,
        Input<Policy> resourceRemoteAlias,
        Input<InstanceLaunchTemplateArgs> typeLocalAlias,
        Input<AuditConfigArgs> typeLocalInsteadOfRemoteAlias,
        Input<BucketWebsiteArgs> typeNoAlias,
        Input<DnsKeySpecArgs> typeRemoteAlias) {
        this.resourceLocalAlias = Objects.requireNonNull(resourceLocalAlias, "expected parameter 'resourceLocalAlias' to be non-null");
        this.resourceLocalInsteadOfRemoteAlias = Objects.requireNonNull(resourceLocalInsteadOfRemoteAlias, "expected parameter 'resourceLocalInsteadOfRemoteAlias' to be non-null");
        this.resourceNoAlias = Objects.requireNonNull(resourceNoAlias, "expected parameter 'resourceNoAlias' to be non-null");
        this.resourceRemoteAlias = Objects.requireNonNull(resourceRemoteAlias, "expected parameter 'resourceRemoteAlias' to be non-null");
        this.typeLocalAlias = Objects.requireNonNull(typeLocalAlias, "expected parameter 'typeLocalAlias' to be non-null");
        this.typeLocalInsteadOfRemoteAlias = Objects.requireNonNull(typeLocalInsteadOfRemoteAlias, "expected parameter 'typeLocalInsteadOfRemoteAlias' to be non-null");
        this.typeNoAlias = Objects.requireNonNull(typeNoAlias, "expected parameter 'typeNoAlias' to be non-null");
        this.typeRemoteAlias = Objects.requireNonNull(typeRemoteAlias, "expected parameter 'typeRemoteAlias' to be non-null");
    }

    private ComponentArgs() {
        this.resourceLocalAlias = Input.empty();
        this.resourceLocalInsteadOfRemoteAlias = Input.empty();
        this.resourceNoAlias = Input.empty();
        this.resourceRemoteAlias = Input.empty();
        this.typeLocalAlias = Input.empty();
        this.typeLocalInsteadOfRemoteAlias = Input.empty();
        this.typeNoAlias = Input.empty();
        this.typeRemoteAlias = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Instance> resourceLocalAlias;
        private Input<Key> resourceLocalInsteadOfRemoteAlias;
        private Input<Bucket> resourceNoAlias;
        private Input<Policy> resourceRemoteAlias;
        private Input<InstanceLaunchTemplateArgs> typeLocalAlias;
        private Input<AuditConfigArgs> typeLocalInsteadOfRemoteAlias;
        private Input<BucketWebsiteArgs> typeNoAlias;
        private Input<DnsKeySpecArgs> typeRemoteAlias;

        public Builder() {
    	      // Empty
        }

        public Builder(ComponentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceLocalAlias = defaults.resourceLocalAlias;
    	      this.resourceLocalInsteadOfRemoteAlias = defaults.resourceLocalInsteadOfRemoteAlias;
    	      this.resourceNoAlias = defaults.resourceNoAlias;
    	      this.resourceRemoteAlias = defaults.resourceRemoteAlias;
    	      this.typeLocalAlias = defaults.typeLocalAlias;
    	      this.typeLocalInsteadOfRemoteAlias = defaults.typeLocalInsteadOfRemoteAlias;
    	      this.typeNoAlias = defaults.typeNoAlias;
    	      this.typeRemoteAlias = defaults.typeRemoteAlias;
        }

        public Builder setResourceLocalAlias(Input<Instance> resourceLocalAlias) {
            this.resourceLocalAlias = Objects.requireNonNull(resourceLocalAlias);
            return this;
        }

        public Builder setResourceLocalAlias(Instance resourceLocalAlias) {
            this.resourceLocalAlias = Input.of(Objects.requireNonNull(resourceLocalAlias));
            return this;
        }

        public Builder setResourceLocalInsteadOfRemoteAlias(Input<Key> resourceLocalInsteadOfRemoteAlias) {
            this.resourceLocalInsteadOfRemoteAlias = Objects.requireNonNull(resourceLocalInsteadOfRemoteAlias);
            return this;
        }

        public Builder setResourceLocalInsteadOfRemoteAlias(Key resourceLocalInsteadOfRemoteAlias) {
            this.resourceLocalInsteadOfRemoteAlias = Input.of(Objects.requireNonNull(resourceLocalInsteadOfRemoteAlias));
            return this;
        }

        public Builder setResourceNoAlias(Input<Bucket> resourceNoAlias) {
            this.resourceNoAlias = Objects.requireNonNull(resourceNoAlias);
            return this;
        }

        public Builder setResourceNoAlias(Bucket resourceNoAlias) {
            this.resourceNoAlias = Input.of(Objects.requireNonNull(resourceNoAlias));
            return this;
        }

        public Builder setResourceRemoteAlias(Input<Policy> resourceRemoteAlias) {
            this.resourceRemoteAlias = Objects.requireNonNull(resourceRemoteAlias);
            return this;
        }

        public Builder setResourceRemoteAlias(Policy resourceRemoteAlias) {
            this.resourceRemoteAlias = Input.of(Objects.requireNonNull(resourceRemoteAlias));
            return this;
        }

        public Builder setTypeLocalAlias(Input<InstanceLaunchTemplateArgs> typeLocalAlias) {
            this.typeLocalAlias = Objects.requireNonNull(typeLocalAlias);
            return this;
        }

        public Builder setTypeLocalAlias(InstanceLaunchTemplateArgs typeLocalAlias) {
            this.typeLocalAlias = Input.of(Objects.requireNonNull(typeLocalAlias));
            return this;
        }

        public Builder setTypeLocalInsteadOfRemoteAlias(Input<AuditConfigArgs> typeLocalInsteadOfRemoteAlias) {
            this.typeLocalInsteadOfRemoteAlias = Objects.requireNonNull(typeLocalInsteadOfRemoteAlias);
            return this;
        }

        public Builder setTypeLocalInsteadOfRemoteAlias(AuditConfigArgs typeLocalInsteadOfRemoteAlias) {
            this.typeLocalInsteadOfRemoteAlias = Input.of(Objects.requireNonNull(typeLocalInsteadOfRemoteAlias));
            return this;
        }

        public Builder setTypeNoAlias(Input<BucketWebsiteArgs> typeNoAlias) {
            this.typeNoAlias = Objects.requireNonNull(typeNoAlias);
            return this;
        }

        public Builder setTypeNoAlias(BucketWebsiteArgs typeNoAlias) {
            this.typeNoAlias = Input.of(Objects.requireNonNull(typeNoAlias));
            return this;
        }

        public Builder setTypeRemoteAlias(Input<DnsKeySpecArgs> typeRemoteAlias) {
            this.typeRemoteAlias = Objects.requireNonNull(typeRemoteAlias);
            return this;
        }

        public Builder setTypeRemoteAlias(DnsKeySpecArgs typeRemoteAlias) {
            this.typeRemoteAlias = Input.of(Objects.requireNonNull(typeRemoteAlias));
            return this;
        }

        public ComponentArgs build() {
            return new ComponentArgs(resourceLocalAlias, resourceLocalInsteadOfRemoteAlias, resourceNoAlias, resourceRemoteAlias, typeLocalAlias, typeLocalInsteadOfRemoteAlias, typeNoAlias, typeRemoteAlias);
        }
    }
}
