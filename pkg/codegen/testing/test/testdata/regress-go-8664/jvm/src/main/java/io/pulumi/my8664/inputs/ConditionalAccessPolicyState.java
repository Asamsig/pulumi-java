// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.my8664.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.my8664.inputs.ConditionalAccessPolicyConditionsGetArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConditionalAccessPolicyState extends io.pulumi.resources.ResourceArgs {

    public static final ConditionalAccessPolicyState Empty = new ConditionalAccessPolicyState();

    @InputImport(name="conditions")
    private final @Nullable Input<ConditionalAccessPolicyConditionsGetArgs> conditions;

    public Input<ConditionalAccessPolicyConditionsGetArgs> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    public ConditionalAccessPolicyState(@Nullable Input<ConditionalAccessPolicyConditionsGetArgs> conditions) {
        this.conditions = conditions;
    }

    private ConditionalAccessPolicyState() {
        this.conditions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalAccessPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ConditionalAccessPolicyConditionsGetArgs> conditions;

        public Builder() {
    	      // Empty
        }

        public Builder(ConditionalAccessPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
        }

        public Builder setConditions(@Nullable Input<ConditionalAccessPolicyConditionsGetArgs> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable ConditionalAccessPolicyConditionsGetArgs conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public ConditionalAccessPolicyState build() {
            return new ConditionalAccessPolicyState(conditions);
        }
    }
}
